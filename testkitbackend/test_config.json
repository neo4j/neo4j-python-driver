{
  "skips": {
    "stub.routing.test_routing_v4x1.RoutingV4x1.test_should_retry_write_until_success_with_leader_change_using_tx_function":
      "Driver closes connection to router if DNS resolved name not in routing table",
    "stub.routing.test_routing_v3.RoutingV3.test_should_retry_write_until_success_with_leader_change_using_tx_function":
      "Driver closes connection to router if DNS resolved name not in routing table",
    "stub.routing.test_routing_v4x3.RoutingV4x3.test_should_retry_write_until_success_with_leader_change_using_tx_function":
      "Driver closes connection to router if DNS resolved name not in routing table",
    "stub.routing.test_routing_v4x1.RoutingV4x1.test_should_retry_write_until_success_with_leader_shutdown_during_tx_using_tx_function":
      "Driver closes connection to router if DNS resolved name not in routing table",
    "stub.routing.test_routing_v3.RoutingV3.test_should_retry_write_until_success_with_leader_shutdown_during_tx_using_tx_function":
      "Driver closes connection to router if DNS resolved name not in routing table",
    "stub.routing.test_routing_v4x3.RoutingV4x3.test_should_retry_write_until_success_with_leader_shutdown_during_tx_using_tx_function":
      "Driver closes connection to router if DNS resolved name not in routing table",
    "stub.routing.test_routing_v4x1.RoutingV4x1.test_should_successfully_acquire_rt_when_router_ip_changes":
      "Test makes assumptions about how verify_connectivity is implemented",
    "stub.routing.test_routing_v3.RoutingV3.test_should_successfully_acquire_rt_when_router_ip_changes":
      "Test makes assumptions about how verify_connectivity is implemented",
    "stub.routing.test_routing_v4x3.RoutingV4x3.test_should_successfully_acquire_rt_when_router_ip_changes":
      "Test makes assumptions about how verify_connectivity is implemented",
    "stub.retry.test_retry_clustering.TestRetryClustering.test_retry_ForbiddenOnReadOnlyDatabase_ChangingWriter":
      "Test makes assumptions about how verify_connectivity is implemented",
    "stub.authorization.test_authorization.TestAuthorizationV4x3.test_should_retry_on_auth_expired_on_begin_using_tx_function":
      "Flaky: test requires the driver to contact servers in a specific order",
    "stub.authorization.test_authorization.TestAuthorizationV3.test_should_retry_on_auth_expired_on_begin_using_tx_function":
      "Flaky: test requires the driver to contact servers in a specific order",
    "stub.authorization.test_authorization.TestAuthorizationV4x1.test_should_retry_on_auth_expired_on_begin_using_tx_function":
      "Flaky: test requires the driver to contact servers in a specific order",
    "stub.session_run_parameters.test_session_run_parameters.TestSessionRunParameters.test_empty_query":
      "Driver rejects empty queries before sending it to the server",
    "tls.tlsversions.TestTlsVersions.test_1_1":
      "TLSv1.1 and below are disabled in the driver"
  },
  "features": {
    "AuthorizationExpiredTreatment": true,
    "Optimization:ImplicitDefaultArguments": true,
    "Optimization:MinimalResets": "Driver resets some clean connections when put back into pool",
    "Optimization:ConnectionReuse": true,
    "Optimization:PullPipelining": true,
    "ConfHint:connection.recv_timeout_seconds": true,
    "Temporary:ResultKeys": true,
    "Temporary:FullSummary": true,
    "Temporary:CypherPathAndRelationship": true
  }
}
