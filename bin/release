#!/usr/bin/env bash
set -e

ROOT=$(dirname "$0")/..
SCRIPT=$(basename "$0")
TWINE_ARGS="--verbose"

if [ "$1" == "--real" ]
then
    shift
else
    TWINE_ARGS="${TWINE_ARGS} --repository testpypi"
fi

VERSION="$1"
if [ "${VERSION}" == "" ]
then
    echo "usage: ${SCRIPT} VERSION"
    exit 1
fi

source "${ROOT}/bin/dist-functions"
for PACKAGE in "neo4j-driver" "neo4j"; do
    NORMALIZED_PACKAGE="$(normalize_dist_name "$PACKAGE")"
    if check_file "${DIST}/${NORMALIZED_PACKAGE}-${VERSION}.tar.gz"
    then
        TWINE_ARGS="${TWINE_ARGS} ${DIST}/${NORMALIZED_PACKAGE}-${VERSION}.tar.gz"
    elif check_file "${DIST}/${PACKAGE}-${VERSION}.tar.gz"; then
        TWINE_ARGS="${TWINE_ARGS} ${DIST}/${PACKAGE}-${VERSION}.tar.gz"
    else
        echo "Source distribution file for ${PACKAGE} not found"
        exit 1
    fi
done

NORMALIZED_PACKAGE="$(normalize_dist_name "neo4j")"
if check_file "${DIST}/${NORMALIZED_PACKAGE}-${VERSION}-py3-none-any.whl"
then
    TWINE_ARGS="${TWINE_ARGS} ${DIST}/${NORMALIZED_PACKAGE}-${VERSION}-py3-none-any.whl"
elif check_file "${DIST}/${PACKAGE}-${VERSION}-py3-none-any.whl"; then
    TWINE_ARGS="${TWINE_ARGS} ${DIST}/${PACKAGE}-${VERSION}-py3-none-any.whl"
else
    echo "Wheel distribution file for ${PACKAGE} not found"
    exit 1
fi


twine upload ${TWINE_ARGS}
